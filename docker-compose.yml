version: "3.8"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  airflow-webserver:
    image: apache/airflow:2.9.3-python3.11
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: airflow_secret_key
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      _PIP_ADDITIONAL_REQUIREMENTS: "-r /requirements.txt"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: >
      bash -lc "
      airflow db migrate &&
      airflow users create --role Admin --username admin --password admin
                           --firstname Air --lastname Flow --email admin@example.com || true &&
      airflow webserver
      "

  airflow-scheduler:
    image: apache/airflow:2.9.3-python3.11
    depends_on:
      postgres:
        condition: service_healthy
      airflow-webserver:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      _PIP_ADDITIONAL_REQUIREMENTS: "-r /requirements.txt"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
    command: >
      bash -lc "
      airflow scheduler
      "

  streamlit:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
    command: >
      bash -lc "
      pip install --no-cache-dir -r app/requirements.txt &&
      streamlit run app/streamlit_app.py --server.port=8501 --server.address=0.0.0.0
      "
    ports:
      - "8501:8501"
    depends_on:
      - airflow-webserver

volumes:
  postgres-db-volume:
